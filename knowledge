#####################################
# N 回繰り返したら繰り返しを停止(for)
for i in 1..1000
  ..
  ..
  if i == N
    break
  end
end

# N 回繰り返したら繰り返しを停止(each)
(1..N).each do |i|
  ..
  ..
end

#####################################
#入力値を変数 N に格納
N = gets.chomp

#入力値を' 'で区切って複数の要素を認識(配列 arr に格納)
arr = gets.chomp.split(' ')

#入力値を' 'で区切って複数の要素を認識（変数 a, b へ格納）
a, b = gets.chomp.split

#入力値を変数 N に格納
N = gets.chomp.map(&:to_X)
# to_X が to_i :整数型  to_f: 浮動小数型  to_s: 文字列型

a = 3.99
a.to_i # => 3     少数以下切り捨て
a.to_f # => 3.99  そのまま
a.to_s # =>'3.99' 文字列に変換

#####################################
# .next について
2.next           # => 3
2.next.next      # => 4
2.next.next.next # => 5

#####################################
# .round / .floor について
1.6.round # => 2 切り上げ
1.6.floor # => 1 切り捨て

#####################################
# .upcase について
'abc'.upcase # => 'ABC'

#####################################
#配列について
#arr = [1, 2, 3] だとして
arr[0]  # => 1
arr[1]  # => 2
arr[2]  # => 3
arr[-1] # => 3     # 後ろから 1 番目
arr[4]  # => nil   

#arr = [1, 2, 3] だとして
arr[5] = 10        # 5 番目に値を入れると
arr[4]  # => nil   #歯抜けの要素はnil表示
arr[5]  # => 10

#ソート
#現時点で arr = [10 , 2, 3, 1] だとしてソートすると
arr.sort
# arr.sort = [1, 2, 3, 10] に並び替えされる
#これを使用して処理したい場合、 arr.sort を別配列として定義が必要

#配列末尾に値を格納
arr << 15 << 20
# arr = [10, 2, 3, 1, 15, 20]

#####################################
# N 内の文字のうち最初に検索された一文字のみ置換(a => X)
N = N.sub("a","X")
# 'abcdea' => 'Xbcdea'

# N 内の文字をすべて置換(a => X)
N = N.gsub("a","X")
# 'abcdea' => 'XbcdeX'

# N 内の複数の文字を同時に置換(a => X, b => Y)
N = N.gsub(/a|b/,"a"=>"X","b"=>"Y")
# 'abcdea' => 'XYcdeX'

#####################################
#配列 arr を左右反転
arr.reverse
#これを使用して処理をしたい場合、 arr.reverse を別配列として定義が必要
